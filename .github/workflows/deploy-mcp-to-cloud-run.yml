name: Build and Deploy MCP Server to Cloud Run

on:
  pull_request:
    branches: [master, feat/unifiy-repo]
    paths:
      - "mcp/**"
      - "lib/**"
      - "services/**"
      - "app/types/**"
      - ".github/workflows/deploy-mcp-to-cloud-run.yml"
  push:
    branches: [master, feat/unifiy-repo]
    paths:
      - "mcp/**"
      - "lib/**"
      - "services/**"
      - "app/types/**"
      - ".github/workflows/deploy-mcp-to-cloud-run.yml"

jobs:
  build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install root dependencies
        run: npm ci
      - name: Install MCP dependencies
        working-directory: ./mcp
        run: npm ci
      - name: Build MCP server
        working-directory: ./mcp
        run: npm run build

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev --quiet
      - name: Create custom src/types directory if it doesn't exist
        run: mkdir -p mcp/src/types
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/${{ secrets.IMAGE_NAME }}:latest -f mcp/Dockerfile .
          docker push ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/${{ secrets.IMAGE_NAME }}:latest
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.RUN_SERVICE_NAME }} \
            --image ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/${{ secrets.IMAGE_NAME }}:latest \
            --region ${{ secrets.REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},REGION=${{ secrets.REGION }},VERTEXAI_EMBEDDING_MODEL=${{ secrets.VERTEXAI_EMBEDDING_MODEL }},GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }},GCS_DEFAULT_BUCKET_LOCATION=${{ secrets.GCS_DEFAULT_BUCKET_LOCATION }}"
