"use client";

import React from "react";
import Link from "next/link";

export default function DocsPage() {
  return (
    <div className="bg-gray-50 min-h-screen py-8 px-4">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-8">
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            MCPH Documentation
          </h1>
          <p className="text-gray-600">
            Learn how to use MCPH to share AI-generated content with anyone,
            anywhere.
          </p>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">
            What is MCPH?
          </h2>
          <p className="text-gray-600 mb-3">
            <b>MCPH</b> is a simple service that lets you store and share
            content generated by AI systems. It works with ChatGPT, Claude, and
            other AI tools that support the Model Context Protocol (MCP).
          </p>
          <p className="text-gray-600 mb-3">With MCPH, you can:</p>
          <ul className="list-disc pl-5 text-gray-600 space-y-2 mb-3">
            <li>
              <b>Share AI outputs</b> with anyone via a simple link - no login
              required to view
            </li>
            <li>
              <b>Store multiple content types</b> including markdown, code,
              JSON, images, and binary files
            </li>
            <li>
              <b>Integrate directly with AI tools</b> so you can create and
              share without manual uploads
            </li>
            <li>
              <b>Password-protect sensitive content</b> with a simple security
              option
            </li>
          </ul>

          {/* Why crate? call-out box */}
          <div className="bg-beige-100 border border-amber-200 rounded-lg p-4 mb-4">
            <h3 className="text-lg font-medium text-amber-800 mb-2">
              Why "crate"?
            </h3>
            <p className="text-gray-700 mb-2">
              We use the term "crate" to describe the shareable artifacts in
              MCPH:
            </p>
            <ul className="list-disc pl-5 text-gray-700 space-y-1">
              <li>
                <b>Files</b> are raw digital content with specific formats
                (e.g., .md, .jpg, .json)
              </li>
              <li>
                <b>Artifacts</b> are the AI-generated outputs you want to
                preserve and share
              </li>
              <li>
                <b>Crates</b> are these artifacts packaged with metadata, making
                them easy to discover, share, and use
              </li>
              <li>
                <b>Like a shipping crate</b>, they can be transported across
                systems and opened anywhere
              </li>
            </ul>
            <p className="text-xs text-gray-500 mt-2">
              <i>
                Looking for more details? Run <code>npx mcp-remote --help</code>{" "}
                for CLI information.
              </i>
            </p>
          </div>

          <p className="text-gray-600">
            MCPH is built on the{" "}
            <a
              href="https://github.com/cloudflare/agents/tree/main/examples/mcp"
              className="text-blue-500 hover:underline"
            >
              Model Context Protocol (MCP)
            </a>
            , which enables AI models to maintain and share context across
            interactions.
          </p>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">Features</h2>
          <ul className="list-disc pl-5 text-gray-600 space-y-2">
            <li>
              <Link
                href="/docs/search"
                className="text-blue-500 hover:underline"
              >
                Hybrid Search
              </Link>
              <p className="text-sm text-gray-500">
                Combine keyword and semantic search for more relevant results.
              </p>
            </li>
          </ul>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">
            Anonymous vs. Logged-in Users
          </h2>
          <p className="text-gray-600 mb-3">
            MCPH offers different capabilities depending on whether you are
            logged in or using the service anonymously.
          </p>
          <table className="w-full text-left border-collapse">
            <thead>
              <tr>
                <th className="border-b p-2">Feature</th>
                <th className="border-b p-2">Anonymous Users</th>
                <th className="border-b p-2">Logged-in Users</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td className="border-b p-2">Download Crates</td>
                <td className="border-b p-2 text-green-500">✓</td>
                <td className="border-b p-2 text-green-500">✓</td>
              </tr>
              <tr>
                <td className="border-b p-2">Upload Crates</td>
                <td className="border-b p-2 text-red-500">✗</td>
                <td className="border-b p-2 text-green-500">✓</td>
              </tr>
              <tr>
                <td className="border-b p-2">Search Crates</td>
                <td className="border-b p-2 text-red-500">✗</td>
                <td className="border-b p-2 text-green-500">✓</td>
              </tr>
              <tr>
                <td className="border-b p-2">Delete Crates</td>
                <td className="border-b p-2 text-red-500">✗</td>
                <td className="border-b p-2 text-green-500">✓</td>
              </tr>
              <tr>
                <td className="border-b p-2">Manage API Keys</td>
                <td className="border-b p-2 text-red-500">✗</td>
                <td className="border-b p-2 text-green-500">✓</td>
              </tr>
            </tbody>
          </table>
          <p className="text-xs text-gray-500 mt-2">
            <i>
              Anonymous users can only download public crates. Logged-in users
              can manage their own crates and API keys.
            </i>
          </p>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">
            Getting Started
          </h2>

          <div className="bg-blue-50 border border-blue-100 rounded-lg p-4 mb-6">
            <p className="text-gray-700 font-medium">Quick Reference</p>
            <ul className="list-disc pl-5 text-gray-600 space-y-1 mt-2">
              <li>
                <b>Web Interface:</b>{" "}
                <a
                  href="https://mcph.io"
                  className="text-blue-500 hover:underline"
                >
                  mcph.io
                </a>
              </li>
              <li>
                <b>API Endpoint:</b> <code>https://mcp.mcph.io/mcp</code>
              </li>
              <li>
                <b>View Shared Content:</b>{" "}
                <code>https://mcph.io/crate/[id]</code>
              </li>
            </ul>
          </div>

          <h3 className="text-lg font-medium text-gray-800 mb-3">
            Step 1: Create an Account
          </h3>
          <p className="text-gray-600 mb-4">
            Visit{" "}
            <a href="https://mcph.io" className="text-blue-500 hover:underline">
              mcph.io
            </a>{" "}
            and sign up for a free account. After logging in, navigate to the
            API Keys section to generate your personal API key. You'll need this
            to connect AI tools to your MCPH account.
          </p>

          <h3 className="text-lg font-medium text-gray-800 mb-3">
            Step 2: Connect Your AI Tool
          </h3>
          <p className="text-gray-600 mb-3">
            MCPH works with any AI tool that supports the Model Context
            Protocol. Crates are stored for 30 days and all generated download
            links expires in 24 hours. The simplest way to connect is using the{" "}
            <code>mcp-remote</code> CLI tool:
          </p>

          <ol className="list-decimal pl-5 text-gray-600 mb-4 space-y-4">
            <li>
              <b>
                Install <code>mcp-remote</code> (one-time setup):
              </b>
              <pre className="text-xs text-blue-700 bg-gray-100 p-2 rounded mt-1 mb-2">
                npm install -g mcp-remote
              </pre>
              <p className="text-sm text-gray-600">
                Or use <code>npx</code> to run without installing (shown in
                examples below).
              </p>
            </li>

            <li>
              <b>Connect to MCPH with your API key:</b>
              <pre className="text-xs text-blue-700 bg-gray-100 p-2 rounded mt-1 mb-2">
                npx mcp-remote https://mcp.mcph.io/mcp --header "Authorization:
                Bearer YOUR_API_KEY"
              </pre>
              <p className="text-sm text-gray-600">
                Replace <code>YOUR_API_KEY</code> with the API key you generated
                in Step 1.
              </p>
            </li>

            <li>
              <b>Configure your AI tool to use MCPH:</b>
              <p className="text-gray-600 text-sm mb-2 mt-1">
                Different AI tools have different setup methods. Here are a few
                common ones:
              </p>

              <div className="mt-2 mb-3">
                <p className="font-medium text-gray-700 mb-1">ChatGPT</p>
                <p className="text-sm text-gray-600 mb-2">
                  In ChatGPT Plus or Enterprise, use the "Configure Custom
                  Actions" feature and add MCPH as a new action with the
                  endpoint <code>https://mcp.mcph.io/mcp</code>
                </p>
              </div>

              <div className="mb-3">
                <p className="font-medium text-gray-700 mb-1">Claude</p>
                <p className="text-sm text-gray-600 mb-2">
                  In Claude Pro or Enterprise, navigate to Settings {`>`} File &
                  Storage and add MCPH as a remote MCP server with the URL{" "}
                  <code>https://mcp.mcph.io/mcp</code>
                </p>
              </div>

              <div className="mb-3">
                <p className="font-medium text-gray-700 mb-1">Local AI Tools</p>
                <p className="text-sm text-gray-600">
                  Many local AI tools and editors support configuration files.
                  Add this to your config:
                </p>
                <pre className="text-xs bg-gray-100 p-2 rounded mt-1 mb-2 text-blue-700 whitespace-pre-wrap">
                  {`{
  "mcpServers": {
    "mcph": {
      "command": "npx",
      "args": [
        "mcp-remote", 
        "https://mcp.mcph.io/mcp",
        "--header",
        "Authorization: Bearer YOUR_API_KEY"
      ]
    }
  }
}`}
                </pre>
              </div>
            </li>
          </ol>

          <h3 className="text-lg font-medium text-gray-800 mb-3">
            Step 3: Create and Share Content
          </h3>
          <p className="text-gray-600 mb-3">
            Once connected, you can ask your AI to create and share content via
            MCPH. For example:
          </p>

          <div className="bg-gray-100 p-3 rounded-lg mb-4 text-gray-700 text-sm">
            "Create a markdown guide explaining user authentication best
            practices and share it via MCPH."
          </div>

          <p className="text-gray-600 mb-3">
            The AI will create the content and provide you with a shareable link
            that looks like:
            <code className="ml-2 text-blue-600">
              https://mcph.io/crate/abc123
            </code>
          </p>

          <p className="text-gray-600">
            Share this link with anyone - they don't need an account to view the
            content.
          </p>

          <div className="mt-8 bg-blue-50 p-4 rounded-lg border border-blue-100">
            <p className="text-gray-700 font-medium mb-2">Next Steps</p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Link
                href="/docs/content-types"
                className="flex items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-blue-300"
              >
                <div className="text-blue-600 mr-3">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-5 w-5"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    />
                  </svg>
                </div>
                <div>
                  <p className="font-medium text-gray-800">
                    Content Types & Features
                  </p>
                  <p className="text-xs text-gray-600">
                    Learn about all the content types and security features
                  </p>
                </div>
              </Link>

              <Link
                href="/upload"
                className="flex items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-blue-300"
              >
                <div className="text-blue-600 mr-3">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-5 w-5"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12"
                    />
                  </svg>
                </div>
                <div>
                  <p className="font-medium text-gray-800">
                    Upload Content Manually
                  </p>
                  <p className="text-xs text-gray-600">
                    Upload crates through the web interface
                  </p>
                </div>
              </Link>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">
            Available MCP Tools
          </h2>
          <div className="space-y-4">
            <div>
              <div className="font-semibold text-gray-800">crates/list</div>
              <div className="text-gray-600">
                List all available crates you have access to.
              </div>
              <pre className="bg-gray-100 text-xs rounded p-2 mt-1 overflow-x-auto">
                <code>{`Output:
{
  crates: [ { id, fileName, ... }, ... ],
  content: [ { type: 'text', text: 'IDs: ...' } ]
}`}</code>
              </pre>
            </div>
            <div>
              <div className="font-semibold text-gray-800">crates/get</div>
              <div className="text-gray-600">
                Get the raw crate data for a specific crate by id.
              </div>
              <pre className="bg-gray-100 text-xs rounded p-2 mt-1 overflow-x-auto">
                <code>{`Output:
{
  crate: { ...meta },
  content: [ { type: 'text', text: '...' } ]
}
// For binary files, returns a temporary download link; for text, returns the content directly.`}</code>
              </pre>
            </div>
            <div>
              <div className="font-semibold text-gray-800">
                crates/get_metadata
              </div>
              <div className="text-gray-600">
                Get all metadata fields as text for a specific crate by id.
              </div>
              <pre className="bg-gray-100 text-xs rounded p-2 mt-1 overflow-x-auto">
                <code>{`Output:
{
  crate: { ...meta },
  content: [ { type: 'text', text: 'key: value\n...' } ]
}`}</code>
              </pre>
            </div>
            <div>
              <div className="font-semibold text-gray-800">crates/search</div>
              <div className="text-gray-600">
                Search for crates by query string in fileName or description.
              </div>
              <pre className="bg-gray-100 text-xs rounded p-2 mt-1 overflow-x-auto">
                <code>{`Output:
{
  crates: [ ... ],
  content: [ { type: 'text', text: 'IDs: ...' } ]
}`}</code>
              </pre>
            </div>
            <div>
              <div className="font-semibold text-gray-800">crates/upload</div>
              <div className="text-gray-600">
                Upload a new crate. For binary files, returns a presigned upload
                URL. For text, uploads directly.
              </div>
              <pre className="bg-gray-100 text-xs rounded p-2 mt-1 overflow-x-auto">
                <code>{`Output (binary):
{
  uploadUrl, fileId, gcsPath, message
}
Output (text):
{
  crate, message
}`}</code>
              </pre>
            </div>
            <div>
              <div className="font-semibold text-gray-800">
                crates/[id]/share
              </div>
              <div className="text-gray-600">
                Update a crate's sharing settings, including visibility,
                password protection, and access control. This endpoint replaces
                the legacy sharing mechanism with a unified approach.
              </div>
              <pre className="bg-gray-100 text-xs rounded p-2 mt-1 overflow-x-auto">
                <code>{`Request:
POST /api/crates/{id}/share
{
  "public": boolean,           // Whether the crate is publicly accessible
  "passwordProtected": boolean, // Whether password protection is enabled
  "password": string,          // Optional: Set a new password
  "removePassword": boolean    // Optional: Remove existing password
}

Response:
{
  "id": string,
  "isShared": boolean,
  "passwordProtected": boolean,
  "shareUrl": string,
  "message": string
}`}</code>
              </pre>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">
            How to Remove an MCP (Delete crates)
          </h2>
          <p className="text-gray-600 mb-3">
            Use the <b>crates/delete</b> tool via MCP, or the REST API{" "}
            <code>DELETE /api/uploads/:id</code> if you are authorized.
          </p>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">
            How the SSE Endpoint Works
          </h2>
          <p className="text-gray-600 mb-3">
            The <b>SSE endpoint</b> (<code>/api/sse</code>) is the only
            supported way to interact with MCPH programmatically. It uses the
            Model Context Protocol (MCP) over Server-Sent Events for real-time,
            bidirectional communication.
          </p>
          <ol className="list-decimal pl-5 text-gray-600 mb-4 space-y-2">
            <li>
              <b>Connect via SSE:</b> Use{" "}
              <code>npx mcp-remote https://mcp.mcph.io/mcp</code> or configure
              your client to use the endpoint.
            </li>
            <li>
              <b>Authentication:</b> Pass your API key as a Bearer token in the{" "}
              <code>Authorization</code> header.
            </li>
            <li>
              <b>Session:</b> On connect, you receive an <code>endpoint</code>{" "}
              event with your session URL. All JSON-RPC requests must include
              your <code>sessionId</code> as a query parameter.
            </li>
            <li>
              <b>Calling Tools:</b> Send JSON-RPC requests to the endpoint.
              Example for <code>crates/list</code>:
              <pre className="text-xs bg-gray-100 p-2 rounded text-blue-700 whitespace-pre-wrap">{`
{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "tools/call",
  "params": {
    "name": "crates/list",
    "arguments": {}
  }
}
`}</pre>
              <span className="text-xs text-gray-500">
                The response will be streamed as an SSE <code>message</code>{" "}
                event with the result.
              </span>
            </li>
          </ol>
          <p className="text-gray-600 mb-3">
            For more details, see the{" "}
            <a
              href="https://www.npmjs.com/package/mcp-remote"
              className="text-blue-500 hover:underline"
            >
              mcp-remote documentation
            </a>{" "}
            or the{" "}
            <a
              href="https://github.com/cloudflare/agents/tree/main/examples/mcp"
              className="text-blue-500 hover:underline"
            >
              MCP protocol reference
            </a>
            .
          </p>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <h2 className="text-xl font-medium text-gray-800 mb-4">Learn More</h2>
          <ul className="list-disc pl-5 text-gray-600 space-y-1">
            <li>
              <a
                href="https://github.com/cloudflare/agents/tree/main/examples/mcp"
                className="text-blue-500 hover:underline"
              >
                MCP Protocol Overview
              </a>
            </li>
            <li>
              <a
                href="https://www.npmjs.com/package/mcp-remote"
                className="text-blue-500 hover:underline"
              >
                mcp-remote npm package
              </a>
            </li>
            <li>
              <a
                href="https://mcph.io"
                className="text-blue-500 hover:underline"
              >
                mcph.io
              </a>
            </li>
          </ul>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-4 sticky top-20">
          <h3 className="font-medium text-gray-800 mb-3">Contents</h3>
          <nav className="space-y-1 text-sm">
            <a
              href="#mcp"
              className="block text-primary-500 hover:text-primary-600 py-1"
            >
              MCP Overview
            </a>
            <a
              href="#tools"
              className="block text-primary-500 hover:text-primary-600 py-1"
            >
              Available Tools
            </a>
            <a
              href="#api"
              className="block text-primary-500 hover:text-primary-600 py-1"
            >
              API Usage
            </a>
            <a
              href="#limits"
              className="block text-primary-500 hover:text-primary-600 py-1"
            >
              Limits & Errors
            </a>
            <a
              href="#sse"
              className="block text-primary-500 hover:text-primary-600 py-1"
            >
              MCP Endpoint: mcp.mcph.io/mcp
            </a>
          </nav>
        </div>
      </div>
    </div>
  );
}
